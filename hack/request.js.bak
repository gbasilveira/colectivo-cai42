import fetch from 'node-fetch';
import inquirer from 'inquirer';
import ora from 'ora';

async function makeRequests() {
    const spinner = ora();
    try {
        // Generate email with timestamp
        const timestamp = Date.now();
        const email = `gbasilveira+cai42+${timestamp}@gmail.com`;
        console.log(`\nUsing email: ${email}`);

        // 1. Get initial CSRF and cookies
        spinner.start('Getting initial CSRF and cookies');
        const initialResponse = await fetch('https://cai42.pt/api/auth/providers', {
            headers: {
                'accept': '*/*',
                'content-type': 'application/json'
            },
            credentials: 'include'
        });
        const cookies = initialResponse.headers.raw()['set-cookie'];
        spinner.succeed('Got initial cookies');

        // 2. Get CSRF token
        spinner.start('Getting CSRF token');
        const csrfResponse = await fetch('https://cai42.pt/api/auth/csrf', {
            headers: {
                'accept': '*/*',
                'content-type': 'application/json',
                'Cookie': cookies?.join('; ')
            }
        });
        const csrfData = await csrfResponse.json();
        const csrfToken = csrfData.csrfToken;
        spinner.succeed(`Got CSRF token: ${csrfToken}`);

        // 3. Request OTP
        spinner.start('Requesting OTP');
        await fetch('https://cai42.pt/', {
            method: 'POST',
            headers: {
                'accept': 'text/x-component',
                'content-type': 'text/plain;charset=UTF-8',
                'next-action': '4464d5e6edbfc2790c122c17c40ad18f02db2bf0',
                'next-router-state-tree': '%5B%22%22%2C%7B%22children%22%3A%5B%22__PAGE__%22%2C%7B%7D%2C%22%2F%22%2C%22refresh%22%5D%7D%2Cnull%2Cnull%2Ctrue%5D',
                'Cookie': cookies?.join('; ')
            },
            body: JSON.stringify([email])
        });
        spinner.succeed('OTP requested');

        // 4. Get OTP from user
        const { otp } = await inquirer.prompt([
            {
                type: 'input',
                name: 'otp',
                message: 'Enter the OTP received:',
                validate: input => input.length === 6 && !isNaN(input)
            }
        ]);

        // 5. Submit OTP
        spinner.start('Submitting OTP');
        const params = new URLSearchParams({
            redirect: 'false',
            email: email,
            code: otp,
            csrfToken: csrfToken,
            callbackUrl: 'https://cai42.pt/'
        });

        const authResponse = await fetch('https://cai42.pt/api/auth/callback/credentials?', {
            method: 'POST',
            headers: {
                'accept': '*/*',
                'content-type': 'application/x-www-form-urlencoded',
                'Cookie': cookies?.join('; '),
                'x-auth-return-redirect': '1'
            },
            body: params.toString(),
            credentials: 'include'
        });

        const authCookies = authResponse.headers.raw()['set-cookie'];
        spinner.succeed('Authentication complete');

        // 6. Access root and start game sequence
        spinner.start('Starting game sequence');
        
        // First challenge
        const challenge1Response = await fetch('https://cai42.pt/user/root', {
            method: 'POST',
            headers: {
                'accept': 'text/x-component',
                'content-type': 'text/plain;charset=UTF-8',
                'next-action': '99ae8442f6a5ee32f7e7c209083660203694aca8',
                'Cookie': authCookies?.join('; '),
                'next-router-state-tree': '%5B%22%22%2C%7B%22children%22%3A%5B%22user%22%2C%7B%22children%22%3A%5B%22root%22%2C%7B%22children%22%3A%5B%22__PAGE__%22%2C%7B%7D%2C%22%2F%22%2C%22refresh%22%5D%7D%5D%7D%5D%7D%2Cnull%2Cnull%2Ctrue%5D'
            },
            body: JSON.stringify(["cm2ulzhth0002gmgzgt9m6lep", "Delta is our Guide"])
        });
        spinner.succeed('Submitted first challenge');

        // LinkedIn challenge
        spinner.start('Submitting LinkedIn');
        await fetch('https://cai42.pt/user/root', {
            method: 'POST',
            headers: {
                'accept': 'text/x-component',
                'content-type': 'text/plain;charset=UTF-8',
                'next-action': '99ae8442f6a5ee32f7e7c209083660203694aca8',
                'Cookie': authCookies?.join('; '),
                'next-router-state-tree': '%5B%22%22%2C%7B%22children%22%3A%5B%22user%22%2C%7B%22children%22%3A%5B%22root%22%2C%7B%22children%22%3A%5B%22__PAGE__%22%2C%7B%7D%2C%22%2F%22%2C%22refresh%22%5D%7D%5D%7D%5D%7D%2Cnull%2Cnull%2Ctrue%5D'
            },
            body: JSON.stringify(["cm2ulzhws0003gmgzn031oo3y", "https://linkedin.com/in/gbasilveira"])
        });
        spinner.succeed('Submitted LinkedIn');

        // Website challenge
        spinner.start('Submitting website');
        await fetch('https://cai42.pt/user/root', {
            method: 'POST',
            headers: {
                'accept': 'text/x-component',
                'content-type': 'text/plain;charset=UTF-8',
                'next-action': '99ae8442f6a5ee32f7e7c209083660203694aca8',
                'Cookie': authCookies?.join('; '),
                'next-router-state-tree': '%5B%22%22%2C%7B%22children%22%3A%5B%22user%22%2C%7B%22children%22%3A%5B%22root%22%2C%7B%22children%22%3A%5B%22__PAGE__%22%2C%7B%7D%2C%22%2F%22%2C%22refresh%22%5D%7D%5D%7D%5D%7D%2Cnull%2Cnull%2Ctrue%5D'
            },
            body: JSON.stringify(["cm2ulzi6n0006gmgz6buis9he", "4242.pt"])
        });
        spinner.succeed('Game sequence complete!');

    } catch (error) {
        spinner.fail('Error occurred');
        console.error('Error details:', error);
    }
}

// Execute the requests
makeRequests().catch(console.error);